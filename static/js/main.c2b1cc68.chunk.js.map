{"version":3,"sources":["utils/moment.js","redux/reducers/filterReducer.js","redux/types.js","redux/reducers/modeReducer.js","redux/reducers/todoReducer.js","redux/reducers/index.js","Containers/Navigation/index.js","Containers/Navigation/redux.js","utils/calendar.js","Components/DayCell/index.js","Containers/CalendarGrid/index.js","Containers/CalendarGrid/redux.js","Components/MonthCell/index.js","Containers/MonthsGrid/index.js","Containers/MonthsGrid/redux.js","Components/TodoItem/index.js","Containers/SingleDay/index.js","Containers/SingleDay/redux.js","Components/Loading/index.js","Containers/CustomSwiper/index.js","Containers/CustomSwiper/redux.js","Containers/MainSection/index.js","Containers/MainSection/redux.js","Containers/App/index.js","index.js"],"names":["moment","locale","week","dow","weekdaysMin","split","months","weekdays","initialState","activeDate","filterReducer","state","arguments","length","undefined","_ref","type","month","date","Object","objectSpread","subtract","add","activeMode","nextHandler","prevHandler","modeReducer","mode","todoListStorage","localStorage","getItem","JSON","parse","todoReducer","newState","newArr","note","ind","hasOwnProperty","toConsumableArray","push","setItem","stringify","splice","rootReducer","combineReducers","filter","todo","LINKMAP","CALENDAR_GRID","SINGLE_DAY","MONTHS_GRID","connect","store","dispatch","handlePlus","incType","handleMinus","decType","changeMode","modeFormat","format","react_default","a","createElement","className","key","onClick","index_es","icon","faAngleUp","size","faAngleDown","getDaysOfWeek","Array","from","v","i","weekday","getMonthsGrid","MODES","getSlides","activeDay","NUMBER_OF_SLIDES","DayCell","day","setDate","isSame","TodoIcon","faListAlt","grid","currentMonth","set","hour","subArr","j","getWeeksGrid","map","name","row","Components_DayCell","assign","MonthCell","setActiveMonth","Components_MonthCell","TodoItem","deleteTodo","currentDay","faTimes","SingleDay","input","handleOnChange","event","_this","setState","target","value","handleAddnote","props","addTodo","_this$props","this","listOfTodos","Components_TodoItem","onChange","placeholder","faPlus","React","Component","Loading","CustomSwiper","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","DOMswiper","createRef","swiper","loading","slides","index","nextProps","nextState","nextContext","current","activeIndex","console","log","prevProps","prevState","snapshot","update","_this2","setTimeout","setHandlers","slideNext","slidePrev","_this3","_this$props2","_self","params","effect","grabCursor","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","direction","height","width","speed","spaceBetween","initialSlide","on","slideChange","transitionEnd","_self$props","grd","render","lib_default","ref","Components_Loading","Containers_CustomSwiper","Containers_CalendarGrid","Containers_MonthsGrid","Containers_SingleDay","App","Containers_Navigation","Containers_MainSection","createStore","composeWithDevTools","applyMiddleware","ReactDOM","es","Containers_App","document","getElementById"],"mappings":"mdAEAA,IAAOC,OAAO,KAAM,CAChBC,KAAM,CACFC,IAAK,GAETC,YAAa,6FAAuBC,MAAM,KAC1CC,OAAQ,saAAkFD,MAAM,KAChGE,SAAU,mVAAgEF,MAAM,OAErEL,QAAf,ECPMQ,EAAe,CACjBC,WAAYT,KAmDDU,EAhDO,WAA+C,IAA9CC,EAA8CC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtCJ,EAAsCO,EAAAH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAvBE,EAAuBD,EAAvBC,KAAMC,EAAiBF,EAAjBE,MAAOC,EAAUH,EAAVG,KACvD,OAAQF,GACJ,ICTmB,cDUf,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAR,EADP,CAEIF,WAAYT,EAAOW,EAAMF,YAAYY,SAAS,EAAG,YAEzD,ICbkB,aDcd,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAR,EADP,CAEIF,WAAYT,EAAOW,EAAMF,YAAYa,IAAI,EAAG,YAEpD,ICjBkB,aDkBd,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACAR,EADP,CAEIF,WAAYT,EAAOW,EAAMF,YAAYY,SAAS,EAAG,WAEzD,ICrBiB,YDsBb,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAR,EADP,CAEIF,WAAYT,EAAOW,EAAMF,YAAYa,IAAI,EAAG,WAEpD,ICtBiB,YDuBb,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACAR,EADP,CAEIF,WAAYT,EAAOW,EAAMF,YAAYY,SAAS,EAAG,UAEzD,IC1BgB,WD2BZ,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAR,EADP,CAEIF,WAAYT,EAAOW,EAAMF,YAAYa,IAAI,EAAG,UAEpD,IClCiB,YDmCb,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACAR,EADP,CAEIF,WAAYT,EAAOW,EAAMF,YAAYQ,MAAMA,KAEnD,ICtCgB,WDuCZ,OAAOE,OAAAC,EAAA,EAAAD,CAAA,GACAR,EADP,CAEIF,WAAYT,EAAOkB,KAE3B,QACI,OAAOP,IEhDbH,EAAe,CACjBe,WAAY,gBACZC,YAAa,aACbC,YAAa,cAsBFC,EAnBK,WAAkE,IAAjEf,EAAiEC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzDJ,EAAyDO,EAAAH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAA1CE,EAA0CD,EAA1CC,KAAMW,EAAoCZ,EAApCY,KAAMH,EAA8BT,EAA9BS,YAAaC,EAAiBV,EAAjBU,YACjE,OAAQT,GACJ,IDNmB,cCOf,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAR,EADP,CAEIY,WAAYI,IAEpB,IDJ0B,qBCKtB,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAR,EADP,CAEIa,cACAC,gBAER,QACI,OAAOd,YCpBbiB,EAAkBC,aAAaC,QAAQ,YAGvCtB,EAAeoB,EAAkBG,KAAKC,MAAMJ,GAAmB,GAmCtDK,EAjCK,WAAmD,IAC/DC,EACAC,EAFaxB,EAAkDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1CJ,EAA0CO,EAAAH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAA3BE,EAA2BD,EAA3BC,KAAME,EAAqBH,EAArBG,KAAMkB,EAAerB,EAAfqB,KAAMC,EAAStB,EAATsB,IAG1D,OAAQrB,GACJ,IFFgB,WEWZ,OARAkB,EAAQf,OAAAC,EAAA,EAAAD,CAAA,GAAOR,GACVA,EAAM2B,eAAepB,KACtBgB,EAAShB,GAAQ,KAErBiB,EAAMhB,OAAAoB,EAAA,EAAApB,CAAOe,EAAShB,KACfsB,KAAKJ,GACZF,EAAShB,GAAQiB,EACjBN,aAAaY,QAAS,WAAYV,KAAKW,UAAUR,IAC1CA,EACX,IFXmB,cEsBf,OAVAA,EAAQf,OAAAC,EAAA,EAAAD,CAAA,GAAOR,IACfwB,EAAMhB,OAAAoB,EAAA,EAAApB,CAAOe,EAAShB,KACXL,SACPsB,EAAOQ,OAAON,EAAK,GACnBH,EAAShB,GAAQiB,GAEhBA,EAAOtB,eACDqB,EAAShB,GAEpBW,aAAaY,QAAS,WAAYV,KAAKW,UAAUR,IAC1CA,EAEX,QACI,OAAOvB,ICxBJiC,EANKC,0BAAgB,CAChCC,OAAQpC,EACRiB,KAAMD,EACNqB,KAAMd,kBCAJe,eAAU,CACZC,cAAe,cACfC,WAAY,gBACZC,YAAa,kBAyDFC,cClEgB,SAACC,GAAD,MAAY,CACvC5C,WAAY4C,EAAMP,OAAOrC,WACzBc,WAAY8B,EAAM1B,KAAKJ,WACvBC,YAAa6B,EAAM1B,KAAKH,YACxBC,YAAa4B,EAAM1B,KAAKF,cAGM,SAAC6B,GAAD,MAAe,CAC7CC,WAAY,SAACC,GACT,OAAQA,GACJ,IAAK,gBACDF,EAAS,CAACtC,KLZA,eKaV,MACJ,IAAK,cACDsC,EAAS,CAACtC,KLbD,cKcT,MACJ,IAAK,aACDsC,EAAS,CAACtC,KLXF,eKiBpByC,YAAa,SAACC,GACV,OAAQA,GACJ,IAAK,gBACDJ,EAAS,CAACtC,KL5BC,gBK6BX,MACJ,IAAK,cACDsC,EAAS,CAACtC,KL7BA,eK8BV,MACJ,IAAK,aACDsC,EAAS,CAACtC,KL3BD,gBKiCrB2C,WAAY,SAAChC,GAAD,OAAU2B,EAAS,CAACtC,KLpCT,cKoC4BW,YD4BxCyB,CAtDI,SAAArC,GAA6F,IAExG6C,EAFanD,EAA2FM,EAA3FN,WAAqCc,GAAsDR,EAA/EwC,WAA+ExC,EAAnE0C,YAAmE1C,EAAtDQ,YAAYoC,EAA0C5C,EAA1C4C,WAAYnC,EAA8BT,EAA9BS,YAAaC,EAAiBV,EAAjBU,YAG3F,OAAQF,GACJ,IAAK,cACDqC,EAAanD,EAAWoD,OAAO,QAC/B,MACJ,IAAK,gBACDD,EAAanD,EAAWoD,OAAO,aAC/B,MACJ,IAAK,aACDD,EAAanD,EAAWoD,OAAO,sBAOvC,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAOXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBACVC,IAAKN,EACLO,QAAS,kBAAMR,EAAWX,EAAQzB,MAEjCqC,IAIbE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBE,QAAS,WAE9C3C,MAEAsC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAiBC,KAAMC,IAAWC,KAAK,QAE3CT,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBE,QAAS,WAE9C1C,MAEAqC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAiBC,KAAMG,IAAaD,KAAK,YEpChDE,SAEFC,MAAMC,KAAK,CAAC9D,OADI,GACqB,SAAC+D,EAAGC,GAC5C,OAAO7E,IAAS8E,QAAQD,GAAGhB,OAAO,SAI7BkB,EAEFL,MAAMC,KAAK,CAAC9D,OADK,IACqB,SAAC+D,EAAGC,GAC7C,OAAO7E,IAASiB,MAAM4D,GAAGhB,OAAO,UAIlCmB,EAAQ,CACV/B,cAAe,SACfC,WAAY,OACZC,YAAa,SAGJ8B,EAAY,SAACC,EAAW3D,GAGjC,OADA2D,EAAU7D,SAAS,GAAI2D,EAAMzD,IACtBmD,MAAMC,KAAK,CAAC9D,OAAQsE,IAAqB,WAC5C,OAAOnF,EAAOkF,EAAU5D,IAAI,EAAG0D,EAAMzD,QCV9B6D,SAhCC,SAAArE,GAAkD,IAAhDsE,EAAgDtE,EAAhDsE,IAAK5E,EAA2CM,EAA3CN,WAAY6E,EAA+BvE,EAA/BuE,QAAS3B,EAAsB5C,EAAtB4C,WAAYZ,EAAUhC,EAAVgC,KAChDkB,EAAY,UAChBA,GAAajE,IAASuF,OAAOF,EAAK,OAC9B,aACE,GACNpB,GAAaxD,EAAW8E,OAAOF,EAAK,SAChC,GACE,gBAEN,IAKMG,EACF1B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBACZH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAiBC,KAAMoB,IAAWlB,KAAK,QAI/C,OACIT,EAAAC,EAAAC,cAAA,MAAS,CAACC,aACNH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBE,QAbrB,WACnBmB,EAAQD,GACR1B,EAAW,gBAYHG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACVjE,EAAOqF,GAAKnE,OACZ6B,EAAKT,eAAe+C,IAAQG,OCHlCpC,qBC1BgB,SAACC,GAAD,MAAY,CAEvC9B,WAAY8B,EAAM1B,KAAKJ,WACvBwB,KAAMM,EAAMN,OAGkB,SAACO,GAAD,MAAe,CAC7CgC,QAAS,SAACpE,GACNoC,EAAS,CACLtC,KTLY,WSMZE,UAGRyC,WAAY,SAAChC,GAAD,OAAU2B,EAAS,CAACtC,KTXT,cSW4BW,YDaxCyB,CApBM,SAAArC,GAAyD,IAAvDN,EAAuDM,EAAvDN,WAAwB6E,GAA+BvE,EAA3CQ,WAA2CR,EAA/BuE,SAAS3B,EAAsB5C,EAAtB4C,WAAYZ,EAAUhC,EAAVgC,KAE1D2C,EFRkB,SAACxE,GACzB,IAEMyE,EAAe3F,EAAOkB,GAK5ByE,EAAaC,IAAbzE,OAAAC,EAAA,EAAAD,CAAA,GAJiB,CACbD,KAAQ,EACR2E,KAAQ,KAGZF,EAAab,QAAQ,GAErB,IADA,IAAIY,EAAO,GACFb,EAAI,EAAGA,EAVQ,EAUaA,IAAK,CAEtC,IADA,IAAIiB,EAAS,GACJC,EAAI,EAAGA,EAXG,EAWiBA,IAChCD,EAAOtD,KAAKmD,EAAab,QAAQiB,GAAGlC,OAAO,eAC3C8B,EAAarE,IAAI,EAAG,QAExBoE,EAAKlD,KAAKsD,GAEd,OAAOJ,EEXMM,CAAavF,GAE1B,OAAOqD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbQ,EAAcwB,IAAI,SAAAC,GAAI,OACnBpC,EAAAC,EAAAC,cAAA,OAAKE,IAAKgC,EAAMjC,UAAU,aACrBiC,KAIRR,EAAKO,IAAI,SAAAE,GACN,OAAOA,EAAIF,IAAI,SAAAZ,GAAG,OACdvB,EAAAC,EAAAC,cAACoC,EAADjF,OAAAkF,OAAA,CAASnC,IAAKmB,GAAS,CAACA,MAAK5E,aAAY6E,UAAS3B,aAAYZ,kBEEnEuD,SAnBG,SAAAvF,GAA0D,IAAxDE,EAAwDF,EAAxDE,MAAOR,EAAiDM,EAAjDN,WAAY4B,EAAqCtB,EAArCsB,IAAKkE,EAAgCxF,EAAhCwF,eAAgB5C,EAAgB5C,EAAhB4C,WAKpDM,EAAY,YAKhB,OAJAA,GAAajE,IAASuF,OAAOvF,EAAOS,GAAYQ,MAAMoB,GAAM,SACxD,aACE,GAGFyB,EAAAC,EAAAC,cAAA,MAAS,CAACC,aACNH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAAoBE,QAXxB,WAClBoC,EAAelE,GACfsB,EAAW,mBAUHG,EAAAC,EAAAC,cAAA,WAAM/C,OCCPmC,qBChBgB,SAACC,GAAD,MAAY,CAEvC9B,WAAY8B,EAAM1B,KAAKJ,aAGO,SAAC+B,GAAD,MAAe,CAC7CiD,eAAgB,SAACtF,GACbqC,EAAS,CACLtC,KZLa,YYMbC,WAGR0C,WAAY,SAAChC,GAAD,OAAU2B,EAAS,CAACtC,KZVT,cYU4BW,YDIxCyB,CAVI,SAAArC,GAA0D,IAAxDN,EAAwDM,EAAxDN,WAAwB8F,GAAgCxF,EAA5CQ,WAA4CR,EAAhCwF,gBAAgB5C,EAAgB5C,EAAhB4C,WACrD,OAAOG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAChBc,EAAckB,IAAI,SAAChF,EAAOoB,GAAR,OAChByB,EAAAC,EAAAC,cAACwC,EAADrF,OAAAkF,OAAA,CAAWnC,IAAKjD,GACD,CAACA,QAAOR,aAAY4B,MAAKkE,iBAAgB5C,8DEQzD8C,eAfE,SAAA1F,GAAyC,IAAvCqB,EAAuCrB,EAAvCqB,KAAMsE,EAAiC3F,EAAjC2F,WAAYrE,EAAqBtB,EAArBsB,IAAKsE,EAAgB5F,EAAhB4F,WACtC,OACI7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACV7B,GAEL0B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAMuC,EAAWC,EAAYtE,KAC1CyB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAiBC,KAAMuC,IAASrC,KAAK,YCJnDsC,6MACFlG,MAAQ,CACJmG,MAAO,MAEXC,eAAiB,SAACC,GACdC,EAAKC,SAAS,CAACJ,MAAOE,EAAMG,OAAOC,WAGvCC,cAAgB,WACRJ,EAAKtG,MAAMmG,QACXG,EAAKK,MAAMC,QAAQN,EAAKtG,MAAMmG,MAAOG,EAAKK,MAAM7G,WAAWoD,OAAO,eAClEoD,EAAKC,SAAS,CAACJ,MAAO,+EAIrB,IAAAU,EAWDC,KATAH,MACI7G,EAHH+G,EAGG/G,WAEAsC,GALHyE,EAIGjG,WAJHiG,EAKGzE,MACA2D,EANHc,EAMGd,WAEJK,EAGAU,KAHAV,eACAM,EAEAI,KAFAJ,cACA1G,EACA8G,KADA9G,MAGAgG,EAAalG,EAAWoD,OAAO,cAC7B6D,EAAc3E,EAAKT,eAAeqE,GAClC5D,EAAK4D,GACL,GAEN,OAAO7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACVyD,EAAYzB,IAAI,SAAC7D,EAAMC,GAAP,OACbyB,EAAAC,EAAAC,cAAC2D,EAADxG,OAAAkF,OAAA,CAAUnC,IAAK7B,GAAS,CAACD,OAAMsE,aAAYrE,MAAKsE,mBAGxD7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,YAAU4D,SAAUb,EAAgBK,MAAOzG,EAAMmG,MAAOe,YAAY,kBACpE/D,EAAAC,EAAAC,cAAA,UAAQG,QAASkD,GACbvD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAiBC,KAAMyD,IAAQvD,KAAK,iBA1CpCwD,IAAMC,WAiDf5E,cCxDgB,SAACC,GAAD,MAAY,CAEvC9B,WAAY8B,EAAM1B,KAAKJ,WACvBwB,KAAMM,EAAMN,OAGkB,SAACO,GAAD,MAAe,CAC7CiE,QAAS,SAACnF,EAAMlB,GAAP,OAAgBoC,EAAS,CAACtC,KfAf,WeA+BoB,OAAMlB,UACzDwF,WAAY,SAACxF,EAAMmB,GAAP,OAAeiB,EAAS,CAACtC,KfAd,ceAiCE,OAAMmB,WDgDnDe,CAA6CyD,kCE1C7CoB,eAVC,WACZ,OACInE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YCDtBiE,cACF,SAAAA,EAAYZ,GAAM,IAAAL,EAAA,OAAA9F,OAAAgH,EAAA,EAAAhH,CAAAsG,KAAAS,IACdjB,EAAA9F,OAAAiH,EAAA,EAAAjH,CAAAsG,KAAAtG,OAAAkH,EAAA,EAAAlH,CAAA+G,GAAAI,KAAAb,KAAMH,KACDiB,UAAYR,IAAMS,YACvBvB,EAAKwB,OAAS,KAEdxB,EAAKtG,MAAQ,CACT+H,SAAS,EACTC,OAAQ,GACRC,MAAO,IARG3B,qFAcI4B,EAAWC,EAAWC,GAC5BtB,KAAKc,UAAUS,QAAQP,OAAOQ,YAC1C,OAAIxB,KAAK9G,MAAMgI,SAAWG,EAAUH,SAGhCO,QAAQC,IAAI,qBACL,8CAIIC,EAAWC,EAAWC,GACrC7B,KAAKc,UAAUS,QAAQP,OAAOQ,YAAc,GAC5CxB,KAAKc,UAAUS,QAAQP,OAAOc,qDAGd,IAAAC,EAAA/B,KAAAD,EACiBC,KAAKH,MAA/B7G,EADS+G,EACT/G,WAAYc,EADHiG,EACGjG,WACnBkI,WAAW,WACPD,EAAKtC,SAAS,CACVyB,OAAQ1D,EAAWjF,EAAOS,GAAcc,GACxCmH,SAAS,KAEf,GACF,IAAMD,EAAShB,KAAKc,UAAUS,QAAQP,OACtChB,KAAKH,MAAMoC,YAAa,WACpBjB,EAAOkB,aACR,WACClB,EAAOmB,cAEXnB,EAAOQ,YAAc,oCAGhB,IAAAY,EAAApC,KAAAqC,EACqDrC,KAAKH,MAA5C/F,GADduI,EACErJ,WADFqJ,EACcvI,YAAYgC,EAD1BuG,EAC0BvG,WAAYE,EADtCqG,EACsCrG,YACrCsG,EAAQtC,KACRuC,EAAS,CACXC,OAAQ,YACRC,YAAY,EAEZC,cAAe,EACfC,gBAAiB,CACbC,OAAQ,IACRC,QAAS,EACTC,OAAQ,GACRC,SAAU,EACVC,cAAc,GAElBC,UAAW,WACXC,OAAQ,IACRC,MAAO,IACPC,MAAO,IACPC,aAAc,GACdC,aAAc,GACdC,GAAI,CACAC,YAAa,WACT/B,QAAQC,IAAI1B,KAAKwB,aACbxB,KAAKwB,YAAcc,EAAMpJ,MAAMiI,MAC/BrF,EAAWhC,GACJkG,KAAKwB,YAAcc,EAAMpJ,MAAMiI,OACtCnF,EAAYlC,GAEhBwI,EAAM7C,SAAS,CAAC0B,MAAMnB,KAAKwB,eAE/BiC,cAAe,WAAY,IAAAC,EACUpB,EAAMzC,MAAhC7G,EADgB0K,EAChB1K,WAAYc,EADI4J,EACJ5J,WACnB2H,QAAQC,IAAI,oBACZ,IAAM9G,EAAM0H,EAAMpJ,MAAMiI,OACpBvG,EAAM,GAAKA,EAAM,MACjB0H,EAAM7C,SAAU,CACZyB,OAAQ1D,EAAWjF,EAAOS,GAAac,GACvCqH,MAAO,KAEXnB,KAAKwB,YAAc,OAO/BmC,EAAM3D,KAAK9G,MAAMgI,OAAO1C,IAAK,SAAA/E,GAAI,OACjC4C,EAAAC,EAAAC,cAAA,OAAKE,KAAMhD,EAAM+C,UAAU,gBACtB4F,EAAKvC,MAAM+D,OAAOnK,MAG3B,OACQ4C,EAAAC,EAAAC,cAACsH,EAAAvH,EAAD5C,OAAAkF,OAAA,CAAQkF,IAAK9D,KAAKc,WACNyB,GAEPvC,KAAK9G,MAAM+H,QAAU5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAkBH,EAAAC,EAAAC,cAACwH,EAAD,OAAoBJ,UAvGpEpD,aA6GZ5E,cC7GgB,SAACC,GAAD,MAAY,CACvC5C,WAAY4C,EAAMP,OAAOrC,WACzBc,WAAY8B,EAAM1B,KAAKJ,WACvBwB,KAAMM,EAAMN,OAGkB,SAACO,GAAD,MAAe,CAC7CgC,QAAS,SAACpE,GACNoC,EAAS,CACLtC,KlBbY,WkBcZE,UAGRyC,WAAY,SAAChC,GAAD,OAAU2B,EAAS,CAC3BtC,KlBpBmB,ckBqBnBW,UAEJ+H,YAAa,SAAClI,EAAaC,GAAd,OAA8B6B,EAAS,CAChDtC,KlBjB0B,qBkBkB1BQ,cACAC,iBAEJ8B,WAAY,SAACC,GACT,OAAQA,GACJ,IAAK,gBACDF,EAAS,CAACtC,KlBlCA,ekBmCV,MACJ,IAAK,cACDsC,EAAS,CAACtC,KlBnCD,ckBoCT,MACJ,IAAK,aACDsC,EAAS,CAACtC,KlBjCF,ekBuCpByC,YAAa,SAACC,GACV,OAAQA,GACJ,IAAK,gBACDJ,EAAS,CAACtC,KlBlDC,gBkBmDX,MACJ,IAAK,cACDsC,EAAS,CAACtC,KlBnDA,ekBoDV,MACJ,IAAK,aACDsC,EAAS,CAACtC,KlBjDD,kBiBgHVoC,CAA6C8E,GEtF7C9E,cC/BgB,SAACC,GAAD,MAAY,CACvC9B,WAAY8B,EAAM1B,KAAKJ,aD8Ba,KAAzB6B,CAxBK,SAAArC,GAAkB,IAAhBQ,EAAgBR,EAAhBQ,WAClB,OACIuC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACK,kBAAf1C,GACDuC,EAAAC,EAAAC,cAACyH,EAAD,CAAcJ,OACV,SAACnK,GAAD,OAAW4C,EAAAC,EAAAC,cAAC0H,EAAD,CAAcjL,WAAYS,OAIzB,gBAAfK,GACDuC,EAAAC,EAAAC,cAACyH,EAAD,CAAcJ,OACV,SAACnK,GAAD,OAAW4C,EAAAC,EAAAC,cAAC2H,EAAD,CAAYlL,WAAYS,OAIvB,eAAfK,GACDuC,EAAAC,EAAAC,cAACyH,EAAD,CAAcJ,OACV,SAACnK,GAAD,OAAW4C,EAAAC,EAAAC,cAAC4H,EAAD,CAAWnL,WAAYS,UERnC2K,EAbH,WACJ,OACI/H,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAC8H,EAAD,MACAhI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC+H,EAAD,SCFd1I,EAAQ2I,sBAAYpJ,EAAaqJ,8BAAqBC,8BAE5DC,IAASd,OACLvH,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAU/I,MAAOA,GACbS,EAAAC,EAAAC,cAACqI,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.c2b1cc68.chunk.js","sourcesContent":["import moment from \"moment\";\r\n\r\nmoment.locale('ru', {\r\n    week: {\r\n        dow: 1,\r\n    },\r\n    weekdaysMin: 'Вс_Пн_Вт_Ср_Чт_Пт_Сб'.split('_'),\r\n    months: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\r\n    weekdays: 'Воскресенье_Понедельник_Вторник_Среда_Четверг_Пятница_Суббота'.split('_')\r\n});\r\nexport default moment;","import moment from \"../../utils/moment\";\r\nimport {MINUS_MONTH, PLUS_MONTH, MINUS_YEAR, PLUS_YEAR, SET_MONTH, SET_DATE, PLUS_DAY, MINUS_DAY} from '../types';\r\n\r\nconst initialState = {\r\n    activeDate: moment(),\r\n};\r\n\r\nconst filterReducer = (state = initialState, {type, month, date}) => {\r\n    switch (type) {\r\n        case MINUS_MONTH:\r\n            return {\r\n                ...state,\r\n                activeDate: moment(state.activeDate).subtract(1, 'months')\r\n            };\r\n        case PLUS_MONTH:\r\n            return {\r\n                ...state,\r\n                activeDate: moment(state.activeDate).add(1, 'months')\r\n            };\r\n        case MINUS_YEAR:\r\n            return {\r\n                ...state,\r\n                activeDate: moment(state.activeDate).subtract(1, 'years')\r\n            };\r\n        case PLUS_YEAR:\r\n            return {\r\n                ...state,\r\n                activeDate: moment(state.activeDate).add(1, 'years')\r\n            };\r\n        case MINUS_DAY:\r\n            return {\r\n                ...state,\r\n                activeDate: moment(state.activeDate).subtract(1, 'days')\r\n            };\r\n        case PLUS_DAY:\r\n            return {\r\n                ...state,\r\n                activeDate: moment(state.activeDate).add(1, 'days')\r\n            };\r\n        case SET_MONTH:\r\n            return {\r\n                ...state,\r\n                activeDate: moment(state.activeDate).month(month)\r\n            };\r\n        case SET_DATE:\r\n            return {\r\n                ...state,\r\n                activeDate: moment(date)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport default filterReducer;","export const MINUS_MONTH = 'MINUS_MONTH';\r\nexport const PLUS_MONTH = 'PLUS_MONTH';\r\nexport const MINUS_YEAR = 'MINUS_YEAR';\r\nexport const PLUS_YEAR = 'PLUS_YEAR';\r\nexport const CHANGE_MODE = 'CHANGE_MODE';\r\nexport const SET_MONTH = 'SET_MONTH';\r\nexport const SET_DATE = 'SET_DATE';\r\nexport const MINUS_DAY = 'MINUS_DAY';\r\nexport const PLUS_DAY = 'PLUS_DAY';\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const SET_SWIPE_HANDLERS = 'SET_SWIPE_HANDLERS';","import {CHANGE_MODE, SET_SWIPE_HANDLERS} from \"../types\";\r\n\r\nconst initialState = {\r\n    activeMode: 'CALENDAR_GRID',\r\n    nextHandler: ()=>{},\r\n    prevHandler: ()=>{}\r\n};\r\n\r\nconst modeReducer = (state = initialState, {type, mode, nextHandler, prevHandler}) => {\r\n    switch (type) {\r\n        case CHANGE_MODE:\r\n            return {\r\n                ...state,\r\n                activeMode: mode\r\n            };\r\n        case SET_SWIPE_HANDLERS:\r\n            return {\r\n                ...state,\r\n                nextHandler,\r\n                prevHandler\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport default modeReducer;","import {ADD_TODO, DELETE_TODO} from '../types';\r\n\r\nconst todoListStorage = localStorage.getItem('todoList');\r\n\r\n\r\nconst initialState = todoListStorage ? JSON.parse(todoListStorage) : {};\r\n\r\nconst todoReducer = (state = initialState, {type, date, note, ind}) => {\r\n    let newState;\r\n    let newArr;\r\n    switch (type) {\r\n        case ADD_TODO:\r\n            newState = {...state};\r\n            if (!state.hasOwnProperty(date)) {\r\n                newState[date] = [];\r\n            }\r\n            newArr = [...newState[date]];\r\n            newArr.push(note);\r\n            newState[date] = newArr;\r\n            localStorage.setItem( 'todoList', JSON.stringify(newState) );\r\n            return newState;\r\n        case DELETE_TODO:\r\n            newState = {...state};\r\n            newArr = [...newState[date]];\r\n            if (newArr.length) {\r\n                newArr.splice(ind, 1);\r\n                newState[date] = newArr;\r\n            }\r\n            if (!newArr.length) {\r\n                delete newState[date];\r\n            }\r\n            localStorage.setItem( 'todoList', JSON.stringify(newState) );\r\n            return newState;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport default todoReducer;","import {combineReducers} from 'redux';\r\nimport filterReducer from './filterReducer';\r\nimport modeReducer from \"./modeReducer\";\r\nimport todoReducer from \"./todoReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    filter: filterReducer,\r\n    mode: modeReducer,\r\n    todo: todoReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {mapStateToProps, mapDispatchToProps} from \"./redux\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faAngleDown, faAngleUp} from '@fortawesome/free-solid-svg-icons'\r\nimport './style.css'\r\nimport {CSSTransitionGroup} from 'react-transition-group';\r\n\r\nconst LINKMAP = {\r\n    CALENDAR_GRID: \"MONTHS_GRID\",\r\n    SINGLE_DAY: \"CALENDAR_GRID\",\r\n    MONTHS_GRID: \"CALENDAR_GRID\"\r\n};\r\n\r\nconst Navigation = ({activeDate, handlePlus, handleMinus, activeMode, changeMode, nextHandler, prevHandler}) => {\r\n    //Text of a button depending on activeMode\r\n    let modeFormat;\r\n    switch (activeMode) {\r\n        case 'MONTHS_GRID':\r\n            modeFormat = activeDate.format('YYYY');\r\n            break;\r\n        case 'CALENDAR_GRID':\r\n            modeFormat = activeDate.format('MMMM YYYY');\r\n            break;\r\n        case 'SINGLE_DAY':\r\n            modeFormat = activeDate.format('dddd, Do MMMM YYYY');\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    //onClick of a button depending on activeMode using LINKMAP to link them\r\n\r\n    return (\r\n        <div className='navigation'>\r\n            <div className='navigation-currMonth'>\r\n                {/*<CSSTransitionGroup*/}\r\n                    {/*component=\"div\"*/}\r\n                    {/*transitionName=\"example\"*/}\r\n                    {/*transitionEnterTimeout={500}*/}\r\n                    {/*transitionLeaveTimeout={0}*/}\r\n                {/*>*/}\r\n                <button className=\"currMonth-button\"\r\n                        key={modeFormat}\r\n                        onClick={() => changeMode(LINKMAP[activeMode])}\r\n                >\r\n                        {modeFormat}\r\n                </button>\r\n                {/*</CSSTransitionGroup>*/}\r\n            </div>\r\n            <div className='navigation-arrows'>\r\n                <button className=\"navigation-nextSlide\" onClick={() => {\r\n                    // handlePlus(activeMode);\r\n                    nextHandler();\r\n                }}>\r\n                    <FontAwesomeIcon icon={faAngleUp} size=\"2x\"/>\r\n                </button>\r\n                <button className=\"navigation-prevSlide\" onClick={() => {\r\n                    // handleMinus(activeMode);\r\n                    prevHandler();\r\n                }}>\r\n                    <FontAwesomeIcon icon={faAngleDown} size=\"2x\"/>\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);","import {MINUS_MONTH, PLUS_MONTH, MINUS_YEAR, PLUS_YEAR, CHANGE_MODE, PLUS_DAY, MINUS_DAY} from '../../redux/types';\r\n\r\nexport const mapStateToProps = (store) => ({\r\n    activeDate: store.filter.activeDate,\r\n    activeMode: store.mode.activeMode,\r\n    nextHandler: store.mode.nextHandler,\r\n    prevHandler: store.mode.prevHandler\r\n});\r\n\r\nexport const mapDispatchToProps = (dispatch) => ({\r\n    handlePlus: (incType) => {\r\n        switch (incType) {\r\n            case 'CALENDAR_GRID':\r\n                dispatch({type: PLUS_MONTH});\r\n                break;\r\n            case 'MONTHS_GRID':\r\n                dispatch({type: PLUS_YEAR});\r\n                break;\r\n            case 'SINGLE_DAY':\r\n                dispatch({type: PLUS_DAY});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n    handleMinus: (decType) => {\r\n        switch (decType) {\r\n            case 'CALENDAR_GRID':\r\n                dispatch({type: MINUS_MONTH});\r\n                break;\r\n            case 'MONTHS_GRID':\r\n                dispatch({type: MINUS_YEAR});\r\n                break;\r\n            case 'SINGLE_DAY':\r\n                dispatch({type: MINUS_DAY});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n    changeMode: (mode) => dispatch({type: CHANGE_MODE, mode})\r\n});","import moment from \"./moment\";\r\n\r\nexport const getWeeksGrid = (date) => {\r\n    const NUMBER_OF_WEEKS = 6;\r\n    const NUMBER_OF_DAYS = 7;\r\n    const currentMonth = moment(date);\r\n    const firstDay = {\r\n        'date': 1,\r\n        'hour': 0\r\n    };\r\n    currentMonth.set({...firstDay});\r\n    currentMonth.weekday(0);\r\n    let grid = [];\r\n    for (let i = 0; i < NUMBER_OF_WEEKS; i++) {\r\n        let subArr = [];\r\n        for (let j = 0; j < NUMBER_OF_DAYS; j++) {\r\n            subArr.push(currentMonth.weekday(j).format('YYYY MM DD'));\r\n            currentMonth.add(1, 'days');\r\n        }\r\n        grid.push(subArr);\r\n    }\r\n    return grid;\r\n};\r\n\r\nexport const getDaysOfWeek = ( () => {\r\n    const NUMBER_OF_DAYS = 7;\r\n    return Array.from({length: NUMBER_OF_DAYS}, (v, i) => {\r\n        return moment().weekday(i).format('dd');\r\n    })\r\n} )();\r\n\r\nexport const getMonthsGrid = (() => {\r\n    const NUMBER_OF_MONTH = 12;\r\n    return Array.from({length: NUMBER_OF_MONTH}, (v, i) => {\r\n        return moment().month(i).format('MMMM');\r\n    })\r\n})();\r\n\r\nconst MODES = {\r\n    CALENDAR_GRID: \"months\",\r\n    SINGLE_DAY: \"days\",\r\n    MONTHS_GRID: \"years\"\r\n};\r\n\r\nexport const getSlides = (activeDay, activeMode) => {\r\n    const NUMBER_OF_SLIDES = 30;\r\n    activeDay.subtract(16, MODES[activeMode]);\r\n    return Array.from({length: NUMBER_OF_SLIDES+1}, () => {\r\n        return moment(activeDay.add(1, MODES[activeMode]));\r\n    })\r\n};","import React from 'react';\r\nimport './style.css';\r\nimport moment from \"../../utils/moment\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faListAlt} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst DayCell = ({day, activeDate, setDate, changeMode, todo}) => {\r\n    let className = 'dayCell';\r\n    className += moment().isSame(day, 'day') ?\r\n        ' todayCell'\r\n        : '';\r\n    className += activeDate.isSame(day, 'month') ?\r\n        ''\r\n        : ' inactiveCell';\r\n\r\n    const onClickHandler = () => {\r\n        setDate(day);\r\n        changeMode('SINGLE_DAY');\r\n    };\r\n\r\n    const TodoIcon = (\r\n        <span className='dayCell-icon'>\r\n            <FontAwesomeIcon icon={faListAlt} size=\"1x\"/>\r\n        </span>\r\n    );\r\n\r\n    return (\r\n        <div {...{className}}>\r\n            <button className='dayCell-wrapper' onClick={onClickHandler}>\r\n                <div className='dayCell-date'>\r\n                    {moment(day).date()}\r\n                    {todo.hasOwnProperty(day) && TodoIcon}\r\n                </div>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DayCell;","import React from 'react';\r\nimport {getWeeksGrid, getDaysOfWeek} from \"../../utils/calendar\";\r\nimport DayCell from '../../Components/DayCell/index';\r\nimport {connect} from 'react-redux';\r\nimport {mapStateToProps, mapDispatchToProps} from \"./redux\";\r\nimport './style.css'\r\n\r\n\r\nconst CalendarGrid = ({activeDate, activeMode, setDate, changeMode, todo}) => {\r\n\r\n    const grid = getWeeksGrid(activeDate);\r\n\r\n    return <div className='calendarGrid'>\r\n            {getDaysOfWeek.map(name =>\r\n                <div key={name} className=\"dayOfWeek\">\r\n                    {name}\r\n                </div>\r\n            )}\r\n\r\n            {grid.map(row => {\r\n                return row.map(day =>\r\n                    <DayCell key={day} {...{day, activeDate, setDate, changeMode, todo}} />\r\n                )\r\n            })}\r\n    </div>\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarGrid);","import {CHANGE_MODE, SET_DATE} from '../../redux/types';\r\n\r\nexport const mapStateToProps = (store) => ({\r\n    // activeDate: store.filter.activeDate,\r\n    activeMode: store.mode.activeMode,\r\n    todo: store.todo\r\n});\r\n\r\nexport const mapDispatchToProps = (dispatch) => ({\r\n    setDate: (date) => {\r\n        dispatch({\r\n            type: SET_DATE,\r\n            date\r\n        })\r\n    },\r\n    changeMode: (mode) => dispatch({type: CHANGE_MODE, mode})\r\n});","import React from 'react';\r\nimport moment from \"../../utils/moment\";\r\nimport './style.css'\r\n\r\nconst MonthCell = ({month, activeDate, ind, setActiveMonth, changeMode}) => {\r\n    const handleOnClick = () => {\r\n        setActiveMonth(ind);\r\n        changeMode('CALENDAR_GRID');\r\n    };\r\n    let className = 'monthCell';\r\n    className += moment().isSame(moment(activeDate).month(ind), 'month') ?\r\n        ' todayCell'\r\n        : '';\r\n\r\n    return (\r\n        <div {...{className}}>\r\n            <button className='monthCell-wrapper' onClick={handleOnClick}>\r\n                <div>{month}</div>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MonthCell;","import React from 'react';\r\nimport {getMonthsGrid} from \"../../utils/calendar\";\r\nimport {connect} from 'react-redux';\r\nimport {mapStateToProps, mapDispatchToProps} from \"./redux\";\r\nimport MonthCell from '../../Components/MonthCell';\r\nimport './style.css'\r\n\r\n\r\nconst MonthsGrid = ({activeDate, activeMode, setActiveMonth, changeMode}) => {\r\n        return <div className='monthsGrid'>\r\n            { getMonthsGrid.map((month, ind) =>\r\n                <MonthCell key={month}\r\n                           {...{month, activeDate, ind, setActiveMonth, changeMode}}\r\n                />\r\n                ) }\r\n        </div>\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MonthsGrid);","import {CHANGE_MODE, SET_MONTH} from '../../redux/types';\r\n\r\nexport const mapStateToProps = (store) => ({\r\n    // activeDate: store.filter.activeDate,\r\n    activeMode: store.mode.activeMode\r\n});\r\n\r\nexport const mapDispatchToProps = (dispatch) => ({\r\n    setActiveMonth: (month) => {\r\n        dispatch({\r\n            type: SET_MONTH,\r\n            month\r\n        })\r\n    },\r\n    changeMode: (mode) => dispatch({type: CHANGE_MODE, mode})\r\n});","import React from 'react';\r\nimport './style.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faTimes} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst TodoItem = ({note, deleteTodo, ind, currentDay}) => {\r\n    return (\r\n        <div className='todoItem'>\r\n            <div className='todoItem-text'>\r\n                {note}\r\n            </div>\r\n            <div className='todoItem-remove'>\r\n                <button onClick={() => deleteTodo(currentDay, ind)}>\r\n                    <FontAwesomeIcon icon={faTimes} size='2x' />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {mapStateToProps, mapDispatchToProps} from \"./redux\";\r\nimport './style.css';\r\nimport TodoItem from '../../Components/TodoItem';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faPlus} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nclass SingleDay extends React.Component {\r\n    state = {\r\n        input: ''\r\n    };\r\n    handleOnChange = (event) => {\r\n        this.setState({input: event.target.value});\r\n    };\r\n\r\n    handleAddnote = () => {\r\n        if (this.state.input) {\r\n            this.props.addTodo(this.state.input, this.props.activeDate.format('YYYY MM DD'));\r\n            this.setState({input: ''});\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            props: {\r\n                activeDate,\r\n                activeMode,\r\n                todo,\r\n                deleteTodo\r\n            },\r\n            handleOnChange,\r\n            handleAddnote,\r\n            state\r\n        } = this;\r\n\r\n        let currentDay = activeDate.format('YYYY MM DD');\r\n        const listOfTodos = todo.hasOwnProperty(currentDay)\r\n            ? todo[currentDay]\r\n            : [];\r\n\r\n        return <div className='singleDay'>\r\n                <div className='noteList'>\r\n                    {listOfTodos.map((note, ind) =>\r\n                        <TodoItem key={ind} {...{note, deleteTodo, ind, currentDay}} />\r\n                    )}\r\n                </div>\r\n                <div className='addNote'>\r\n                    <textarea onChange={handleOnChange} value={state.input} placeholder=\"Add a note...\"/>\r\n                    <button onClick={handleAddnote}>\r\n                        <FontAwesomeIcon icon={faPlus} size=\"2x\"/>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleDay);","import {ADD_TODO, DELETE_TODO} from '../../redux/types';\r\n\r\nexport const mapStateToProps = (store) => ({\r\n    // activeDate: store.filter.activeDate,\r\n    activeMode: store.mode.activeMode,\r\n    todo: store.todo\r\n});\r\n\r\nexport const mapDispatchToProps = (dispatch) => ({\r\n    addTodo: (note, date) => dispatch({type: ADD_TODO, note, date}),\r\n    deleteTodo: (date, ind) => dispatch({type: DELETE_TODO, date, ind}),\r\n});","// node modules\r\nimport React from 'react';\r\n\r\n// styles\r\nimport './style.css';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loading\">\r\n            <span className=\"dot1\"/>\r\n            <span className=\"dot2\"/>\r\n            <span className=\"dot3\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {mapStateToProps, mapDispatchToProps} from \"./redux\";\r\nimport './style.css';\r\nimport Swiper from 'react-id-swiper';\r\nimport './swiper.css';\r\nimport moment from '../../utils/moment';\r\nimport {getSlides} from \"../../utils/calendar\";\r\nimport Loading from \"../../Components/Loading\";\r\n\r\nclass CustomSwiper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.DOMswiper = React.createRef();\r\n        this.swiper = null;\r\n\r\n        this.state = {\r\n            loading: true,\r\n            slides: [],\r\n            index: 15\r\n        }\r\n\r\n    }\r\n\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const ind = this.DOMswiper.current.swiper.activeIndex;\r\n        if (this.state.slides === nextState.slides) {\r\n            return false;\r\n        } else {\r\n            console.log(\"shouldUPDATE!!!!\");\r\n            return true;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.DOMswiper.current.swiper.activeIndex = 15;\r\n        this.DOMswiper.current.swiper.update();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {activeDate, activeMode} = this.props;\r\n        setTimeout(()=> {\r\n            this.setState({\r\n                slides: getSlides( moment(activeDate) , activeMode ),\r\n                loading: false\r\n            });\r\n        },0);\r\n        const swiper = this.DOMswiper.current.swiper;\r\n        this.props.setHandlers( ()=>{\r\n            swiper.slideNext();\r\n        }, ()=>{\r\n            swiper.slidePrev();\r\n        } )\r\n        swiper.activeIndex = 15;\r\n    }\r\n\r\n    render() {\r\n        const {activeDate, activeMode, handlePlus, handleMinus} = this.props;\r\n        const _self = this;\r\n        const params = {\r\n            effect: 'coverflow',\r\n            grabCursor: true,\r\n            // centeredSlides: true,\r\n            slidesPerView: 1,\r\n            coverflowEffect: {\r\n                rotate: 150,\r\n                stretch: 0,\r\n                depth: -50,\r\n                modifier: 1,\r\n                slideShadows: true,\r\n            },\r\n            direction: 'vertical',\r\n            height: 365,\r\n            width: 300,\r\n            speed: 800,\r\n            spaceBetween: 30,\r\n            initialSlide: 15,\r\n            on: {\r\n                slideChange: function () {\r\n                    console.log(this.activeIndex);\r\n                    if (this.activeIndex > _self.state.index) {\r\n                        handlePlus(activeMode);\r\n                    } else if (this.activeIndex < _self.state.index) {\r\n                        handleMinus(activeMode);\r\n                    }\r\n                    _self.setState({index:this.activeIndex});\r\n                },\r\n                transitionEnd: function () {\r\n                    const {activeDate, activeMode} = _self.props;\r\n                    console.log(\"transition ended\");\r\n                    const ind = _self.state.index;\r\n                    if (ind < 2 || ind > 28) {\r\n                        _self.setState( {\r\n                            slides: getSlides( moment(activeDate), activeMode),\r\n                            index: 15\r\n                        } );\r\n                        this.activeIndex = 15;\r\n                    }\r\n                }\r\n\r\n            },\r\n        };\r\n\r\n        let grd = this.state.slides.map( date =>\r\n            <div key={+date} className='swiper-slide'>\r\n                {this.props.render(date)}\r\n            </div>\r\n        );\r\n        return  (\r\n                <Swiper ref={this.DOMswiper}\r\n                        {...params}\r\n                >\r\n                    {this.state.loading ? <div className='loading-wrapper'><Loading /></div> : grd }\r\n                </Swiper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomSwiper);","import {\r\n    CHANGE_MODE, MINUS_DAY,\r\n    MINUS_MONTH, MINUS_YEAR,\r\n    PLUS_DAY,\r\n    PLUS_MONTH,\r\n    PLUS_YEAR,\r\n    SET_DATE,\r\n    SET_SWIPE_HANDLERS\r\n} from '../../redux/types';\r\n\r\nexport const mapStateToProps = (store) => ({\r\n    activeDate: store.filter.activeDate,\r\n    activeMode: store.mode.activeMode,\r\n    todo: store.todo\r\n});\r\n\r\nexport const mapDispatchToProps = (dispatch) => ({\r\n    setDate: (date) => {\r\n        dispatch({\r\n            type: SET_DATE,\r\n            date\r\n        })\r\n    },\r\n    changeMode: (mode) => dispatch({\r\n        type: CHANGE_MODE,\r\n        mode,\r\n    }),\r\n    setHandlers: (nextHandler, prevHandler) => dispatch({\r\n        type: SET_SWIPE_HANDLERS,\r\n        nextHandler,\r\n        prevHandler\r\n    }),\r\n    handlePlus: (incType) => {\r\n        switch (incType) {\r\n            case 'CALENDAR_GRID':\r\n                dispatch({type: PLUS_MONTH});\r\n                break;\r\n            case 'MONTHS_GRID':\r\n                dispatch({type: PLUS_YEAR});\r\n                break;\r\n            case 'SINGLE_DAY':\r\n                dispatch({type: PLUS_DAY});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n    handleMinus: (decType) => {\r\n        switch (decType) {\r\n            case 'CALENDAR_GRID':\r\n                dispatch({type: MINUS_MONTH});\r\n                break;\r\n            case 'MONTHS_GRID':\r\n                dispatch({type: MINUS_YEAR});\r\n                break;\r\n            case 'SINGLE_DAY':\r\n                dispatch({type: MINUS_DAY});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n});","import React from 'react';\r\nimport CalendarGrid from \"../CalendarGrid\";\r\nimport MonthsGrid from \"../MonthsGrid\";\r\nimport SingleDay from '../SingleDay';\r\nimport './style.css';\r\nimport {mapStateToProps, mapDispatchToProps} from \"./redux\";\r\nimport CustomSwiper from \"../CustomSwiper\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst MainSection = ({activeMode}) => {\r\n    return (\r\n        <div className='mainSection'>\r\n            {activeMode === \"CALENDAR_GRID\" &&\r\n            <CustomSwiper render={\r\n                (date) => (<CalendarGrid activeDate={date}/>)\r\n            }/>\r\n            }\r\n\r\n            {activeMode === \"MONTHS_GRID\" &&\r\n            <CustomSwiper render={\r\n                (date) => (<MonthsGrid activeDate={date}/>)\r\n            }/>\r\n            }\r\n\r\n            {activeMode === \"SINGLE_DAY\" &&\r\n            <CustomSwiper render={\r\n                (date) => (<SingleDay activeDate={date}/>)\r\n            }/>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(MainSection);","import {MINUS_MONTH, PLUS_MONTH, MINUS_YEAR, PLUS_YEAR, CHANGE_MODE, PLUS_DAY, MINUS_DAY} from '../../redux/types';\r\n\r\nexport const mapStateToProps = (store) => ({\r\n    activeMode: store.mode.activeMode,\r\n});\r\n\r\n","import React from 'react';\r\nimport Navigation from '../Navigation';\r\nimport './style.css';\r\nimport MainSection from '../MainSection'\r\n\r\nconst App = () => {\r\n        return (\r\n            <div>\r\n                <div className='app'>\r\n                    <Navigation/>\r\n                    <hr/>\r\n                    <MainSection/>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    };\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport rootReducer from './redux/reducers';\nimport App from './Containers/App';\n\n\nconst store = createStore(rootReducer, composeWithDevTools( applyMiddleware() ) );\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    , document.getElementById('root'));"],"sourceRoot":""}