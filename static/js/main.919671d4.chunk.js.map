{"version":3,"sources":["utils/moment.js","redux/reducers/filterReducer.js","redux/types.js","redux/reducers/modeReducer.js","redux/reducers/todoReducer.js","redux/reducers/index.js","Containers/Navigation/index.js","Containers/Navigation/redux.js","Components/DayCell/index.js","Containers/CalendarGrid/index.js","Containers/CalendarGrid/redux.js","utils/calendar.js","Components/MonthCell/index.js","Containers/MonthsGrid/index.js","Containers/MonthsGrid/redux.js","Components/TodoItem/index.js","Containers/SingleDay/index.js","Containers/SingleDay/redux.js","Containers/MainSection/index.js","Containers/App/index.js","index.js"],"names":["moment","locale","week","dow","weekdaysMin","split","months","weekdays","initialState","activeDate","filterReducer","state","arguments","length","undefined","_ref","type","month","date","Object","objectSpread","subtract","add","activeMode","modeReducer","mode","todoListStorage","localStorage","getItem","JSON","parse","todoReducer","newState","newArr","note","ind","hasOwnProperty","toConsumableArray","push","setItem","stringify","splice","rootReducer","combineReducers","filter","todo","LINKMAP","CALENDAR_GRID","SINGLE_DAY","MONTHS_GRID","connect","store","dispatch","handlePlus","incType","handleMinus","decType","changeMode","modeFormat","format","react_default","a","createElement","className","onClick","index_es","icon","faAngleUp","size","faAngleDown","DayCell","day","setDate","isSame","TodoIcon","faListAlt","grid","currentMonth","set","hour","weekday","i","subArr","j","getWeeksGrid","daysOfWeek","Array","from","v","map","name","key","row","Components_DayCell","assign","MonthCell","setActiveMonth","monthGrid","Components_MonthCell","TodoItem","deleteTodo","currentDay","faTimes","SingleDay","input","handleOnChange","event","_this","setState","target","value","handleAddnote","props","addTodo","_this$props","this","listOfTodos","Components_TodoItem","onChange","placeholder","faPlus","React","Component","MainSection","Containers_CalendarGrid","Containers_MonthsGrid","Containers_SingleDay","App","Containers_Navigation","Containers_MainSection","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","es","Containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.919671d4.chunk.js","sourcesContent":["import moment from \"moment\";\r\n\r\nmoment.locale('ru', {\r\n    week: {\r\n        dow: 1,\r\n    },\r\n    weekdaysMin: 'Вс_Пн_Вт_Ср_Чт_Пт_Сб'.split('_'),\r\n    months: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\r\n    weekdays: 'Воскресенье_Понедельник_Вторник_Среда_Четверг_Пятница_Суббота'.split('_')\r\n});\r\nexport default moment;","import moment from \"../../utils/moment\";\r\nimport {MINUS_MONTH, PLUS_MONTH, MINUS_YEAR, PLUS_YEAR, SET_MONTH, SET_DATE, PLUS_DAY, MINUS_DAY} from '../types';\r\n\r\nconst initialState = {\r\n    activeDate: moment(),\r\n};\r\n\r\nconst filterReducer = (state = initialState, {type, month, date}) => {\r\n    switch (type) {\r\n        case MINUS_MONTH:\r\n            return {\r\n                ...state,\r\n                activeDate: moment(state.activeDate).subtract(1, 'months')\r\n            };\r\n        case PLUS_MONTH:\r\n            return {\r\n                ...state,\r\n                activeDate: moment(state.activeDate).add(1, 'months')\r\n            };\r\n        case MINUS_YEAR:\r\n            return {\r\n                ...state,\r\n                activeDate: moment(state.activeDate).subtract(1, 'years')\r\n            };\r\n        case PLUS_YEAR:\r\n            return {\r\n                ...state,\r\n                activeDate: moment(state.activeDate).add(1, 'years')\r\n            };\r\n        case MINUS_DAY:\r\n            return {\r\n                ...state,\r\n                activeDate: moment(state.activeDate).subtract(1, 'days')\r\n            };\r\n        case PLUS_DAY:\r\n            return {\r\n                ...state,\r\n                activeDate: moment(state.activeDate).add(1, 'days')\r\n            };\r\n        case SET_MONTH:\r\n            return {\r\n                ...state,\r\n                activeDate: moment(state.activeDate).month(month)\r\n            };\r\n        case SET_DATE:\r\n            return {\r\n                ...state,\r\n                activeDate: moment(date)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport default filterReducer;","export const MINUS_MONTH = 'MINUS_MONTH';\r\nexport const PLUS_MONTH = 'PLUS_MONTH';\r\nexport const MINUS_YEAR = 'MINUS_YEAR';\r\nexport const PLUS_YEAR = 'PLUS_YEAR';\r\nexport const CHANGE_MODE = 'CHANGE_MODE';\r\nexport const SET_MONTH = 'SET_MONTH';\r\nexport const SET_DATE = 'SET_DATE';\r\nexport const MINUS_DAY = 'MINUS_DAY';\r\nexport const PLUS_DAY = 'PLUS_DAY';\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO';","import {CHANGE_MODE} from \"../types\";\r\n\r\nconst initialState = {\r\n    activeMode: 'CALENDAR_GRID'\r\n};\r\n\r\nconst modeReducer = (state = initialState, {type, mode}) => {\r\n    switch (type) {\r\n        case CHANGE_MODE:\r\n            return {\r\n                ...state,\r\n                activeMode: mode\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport default modeReducer;","import {ADD_TODO, DELETE_TODO} from '../types';\r\n\r\nconst todoListStorage = localStorage.getItem('todoList');\r\n\r\n\r\nconst initialState = todoListStorage ? JSON.parse(todoListStorage) : {};\r\n\r\nconst todoReducer = (state = initialState, {type, date, note, ind}) => {\r\n    let newState;\r\n    let newArr;\r\n    switch (type) {\r\n        case ADD_TODO:\r\n            newState = {...state};\r\n            if (!state.hasOwnProperty(date)) {\r\n                newState[date] = [];\r\n            }\r\n            newArr = [...newState[date]];\r\n            newArr.push(note);\r\n            newState[date] = newArr;\r\n            localStorage.setItem( 'todoList', JSON.stringify(newState) );\r\n            return newState;\r\n        case DELETE_TODO:\r\n            newState = {...state};\r\n            newArr = [...newState[date]];\r\n            if (newArr.length) {\r\n                newArr.splice(ind, 1);\r\n                newState[date] = newArr;\r\n            }\r\n            if (!newArr.length) {\r\n                delete newState[date];\r\n            }\r\n            localStorage.setItem( 'todoList', JSON.stringify(newState) );\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport default todoReducer;","import {combineReducers} from 'redux';\r\nimport filterReducer from './filterReducer';\r\nimport modeReducer from \"./modeReducer\";\r\nimport todoReducer from \"./todoReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    filter: filterReducer,\r\n    mode: modeReducer,\r\n    todo: todoReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {mapStateToProps, mapDispatchToProps} from \"./redux\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faAngleDown, faAngleUp} from '@fortawesome/free-solid-svg-icons'\r\nimport './style.css'\r\n\r\nconst LINKMAP = {\r\n    CALENDAR_GRID: \"MONTHS_GRID\",\r\n    SINGLE_DAY: \"CALENDAR_GRID\",\r\n    MONTHS_GRID: \"CALENDAR_GRID\"\r\n};\r\n\r\nconst Navigation = ({activeDate, handlePlus, handleMinus, activeMode, changeMode}) => {\r\n    //Text of a button depending on activeMode\r\n    let modeFormat;\r\n    switch (activeMode) {\r\n        case 'MONTHS_GRID':\r\n            modeFormat = activeDate.format('YYYY');\r\n            break;\r\n        case 'CALENDAR_GRID':\r\n            modeFormat = activeDate.format('MMMM YYYY');\r\n            break;\r\n        case 'SINGLE_DAY':\r\n            modeFormat = activeDate.format('dddd, Do MMMM YYYY');\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    //onClick of a button depending on activeMode using LINKMAP to link them\r\n    return (\r\n        <div className='navigation'>\r\n            <div className='navigation-currMonth'>\r\n                <button onClick={() => changeMode(LINKMAP[activeMode])}>\r\n                    {modeFormat}\r\n                </button>\r\n            </div>\r\n            <div className='navigation-arrows'>\r\n                <button onClick={() => handlePlus(activeMode)}>\r\n                    <FontAwesomeIcon icon={faAngleUp} size=\"2x\"/>\r\n                </button>\r\n                <button onClick={() => handleMinus(activeMode)}>\r\n                    <FontAwesomeIcon icon={faAngleDown} size=\"2x\"/>\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);","import {MINUS_MONTH, PLUS_MONTH, MINUS_YEAR, PLUS_YEAR, CHANGE_MODE, PLUS_DAY, MINUS_DAY} from '../../redux/types';\r\n\r\nexport const mapStateToProps = (store) => ({\r\n    activeDate: store.filter.activeDate,\r\n    activeMode: store.mode.activeMode\r\n});\r\n\r\nexport const mapDispatchToProps = (dispatch) => ({\r\n    handlePlus: (incType) => {\r\n        switch (incType) {\r\n            case 'CALENDAR_GRID':\r\n                dispatch({type: PLUS_MONTH});\r\n                break;\r\n            case 'MONTHS_GRID':\r\n                dispatch({type: PLUS_YEAR});\r\n                break;\r\n            case 'SINGLE_DAY':\r\n                dispatch({type: PLUS_DAY});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n    handleMinus: (decType) => {\r\n        switch (decType) {\r\n            case 'CALENDAR_GRID':\r\n                dispatch({type: MINUS_MONTH});\r\n                break;\r\n            case 'MONTHS_GRID':\r\n                dispatch({type: MINUS_YEAR});\r\n                break;\r\n            case 'SINGLE_DAY':\r\n                dispatch({type: MINUS_DAY});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n    changeMode: (mode) => dispatch({type: CHANGE_MODE, mode})\r\n});","import React from 'react';\r\nimport './style.css';\r\nimport moment from \"../../utils/moment\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faListAlt} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst DayCell = ({day, activeDate, setDate, changeMode, todo}) => {\r\n    // let fullDate = activeDate.format('YYYY MM DD');\r\n    let className = 'dayCell';\r\n    className += moment().isSame(day, 'day') ?\r\n        ' todayCell'\r\n        : '';\r\n    className += activeDate.isSame(day, 'month') ?\r\n        ''\r\n        : ' inactiveCell';\r\n\r\n    const onClickHandler = () => {\r\n        setDate(day);\r\n        changeMode('SINGLE_DAY');\r\n    };\r\n\r\n    const TodoIcon = (\r\n        <span className='dayCell-icon'>\r\n            <FontAwesomeIcon icon={faListAlt} size=\"1x\"/>\r\n        </span>\r\n    );\r\n\r\n    return (\r\n        <div {...{className}}>\r\n            <button className='dayCell-wrapper' onClick={onClickHandler}>\r\n                <div className='dayCell-date'>\r\n                    {moment(day).date()}\r\n                    {todo.hasOwnProperty(day) && TodoIcon}\r\n                </div>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DayCell;","import React from 'react';\r\nimport {getWeeksGrid, getDaysOfWeek} from \"../../utils/calendar\";\r\nimport DayCell from '../../Components/DayCell/index';\r\nimport {connect} from 'react-redux';\r\nimport {mapStateToProps, mapDispatchToProps} from \"./redux\";\r\nimport './style.css'\r\n\r\n\r\nconst CalendarGrid = ({activeDate, activeMode, setDate, changeMode, todo}) => {\r\n\r\n    const grid = getWeeksGrid(activeDate);\r\n    const daysOfWeek = getDaysOfWeek();\r\n\r\n    return activeMode === 'CALENDAR_GRID'\r\n        ? <div className='calendarGrid'>\r\n            {daysOfWeek.map(name =>\r\n                <div key={name} className=\"dayOfWeek\">\r\n                    {name}\r\n                </div>\r\n            )}\r\n\r\n            {grid.map(row => {\r\n                return row.map(day =>\r\n                    <DayCell key={day} {...{day, activeDate, setDate, changeMode, todo}} />\r\n                )\r\n            })}\r\n        </div>\r\n        : null;\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarGrid);","import {CHANGE_MODE, SET_DATE} from '../../redux/types';\r\n\r\nexport const mapStateToProps = (store) => ({\r\n    activeDate: store.filter.activeDate,\r\n    activeMode: store.mode.activeMode,\r\n    todo: store.todo\r\n});\r\n\r\nexport const mapDispatchToProps = (dispatch) => ({\r\n    setDate: (date) => {\r\n        dispatch({\r\n            type: SET_DATE,\r\n            date\r\n        })\r\n    },\r\n    changeMode: (mode) => dispatch({type: CHANGE_MODE, mode})\r\n});","import moment from \"./moment\";\r\n\r\nexport const getWeeksGrid = (date) => {\r\n    const NUMBER_OF_WEEKS = 6;\r\n    const NUMBER_OF_DAYS = 7;\r\n    const currentMonth = new moment(date);\r\n    const firstDay = {\r\n        'date': 1,\r\n        'hour': 0\r\n    };\r\n    currentMonth.set({...firstDay});\r\n    currentMonth.weekday(0);\r\n    let grid = [];\r\n    for (let i = 0; i < NUMBER_OF_WEEKS; i++) {\r\n        let subArr = [];\r\n        for (let j = 0; j < NUMBER_OF_DAYS; j++) {\r\n            subArr.push(currentMonth.weekday(j).format('YYYY MM DD'));\r\n            currentMonth.add(1, 'days');\r\n        }\r\n        grid.push(subArr);\r\n    }\r\n    return grid;\r\n};\r\n\r\nexport const getDaysOfWeek = () => {\r\n    const NUMBER_OF_DAYS = 7;\r\n    return Array.from({length: NUMBER_OF_DAYS}, (v, i) => {\r\n        return moment().weekday(i).format('dd');\r\n    })\r\n};\r\n\r\nexport const getMonthsGrid = () => {\r\n    const NUMBER_OF_MONTH = 12;\r\n    return Array.from({length: NUMBER_OF_MONTH}, (v, i) => {\r\n        return moment().month(i).format('MMMM');\r\n    })\r\n};","import React from 'react';\r\nimport moment from \"../../utils/moment\";\r\nimport './style.css'\r\n\r\nconst MonthCell = ({month, activeDate, ind, setActiveMonth, changeMode}) => {\r\n    const handleOnClick = () => {\r\n        setActiveMonth(ind);\r\n        changeMode('CALENDAR_GRID');\r\n    };\r\n    let className = 'monthCell';\r\n    className += moment().isSame(activeDate.month(ind), 'month') ?\r\n        ' todayCell'\r\n        : '';\r\n    // className += activeDate.isSame(day, 'month') ?\r\n    //     ''\r\n    //     : ' inactiveCell';\r\n    return (\r\n        <div {...{className}}>\r\n            <button className='monthCell-wrapper' onClick={handleOnClick}>\r\n                <div>{month}</div>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MonthCell;","import React from 'react';\r\nimport {getMonthsGrid} from \"../../utils/calendar\";\r\nimport {connect} from 'react-redux';\r\nimport {mapStateToProps, mapDispatchToProps} from \"./redux\";\r\nimport MonthCell from '../../Components/MonthCell';\r\nimport './style.css'\r\n\r\n\r\nconst MonthsGrid = ({activeDate, activeMode, setActiveMonth, changeMode}) => {\r\n\r\n    let monthGrid = getMonthsGrid();\r\n\r\n    return activeMode === 'MONTHS_GRID'\r\n        ? <div className='monthsGrid'>\r\n            {monthGrid.map((month, ind) =>\r\n                <MonthCell key={month}\r\n                           {...{month, activeDate, ind, setActiveMonth, changeMode}}\r\n                />)}\r\n        </div>\r\n        : null;\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MonthsGrid);","import {CHANGE_MODE, SET_MONTH} from '../../redux/types';\r\n\r\nexport const mapStateToProps = (store) => ({\r\n    activeDate: store.filter.activeDate,\r\n    activeMode: store.mode.activeMode\r\n});\r\n\r\nexport const mapDispatchToProps = (dispatch) => ({\r\n    setActiveMonth: (month) => {\r\n        dispatch({\r\n            type: SET_MONTH,\r\n            month\r\n        })\r\n    },\r\n    changeMode: (mode) => dispatch({type: CHANGE_MODE, mode})\r\n});","import React from 'react';\r\nimport './style.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faTimes} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst TodoItem = ({note, deleteTodo, ind, currentDay}) => {\r\n    return (\r\n        <div className='todoItem'>\r\n            <div className='todoItem-text'>\r\n                {note}\r\n            </div>\r\n            <div className='todoItem-remove'>\r\n                <button onClick={() => deleteTodo(currentDay, ind)}>\r\n                    <FontAwesomeIcon icon={faTimes} size='2x' />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {mapStateToProps, mapDispatchToProps} from \"./redux\";\r\nimport './style.css';\r\nimport TodoItem from '../../Components/TodoItem';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faPlus} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nclass SingleDay extends React.Component {\r\n    state = {\r\n        input: ''\r\n    };\r\n    handleOnChange = (event) => {\r\n        this.setState({input: event.target.value});\r\n    };\r\n\r\n    handleAddnote = () => {\r\n        if (this.state.input) {\r\n            this.props.addTodo(this.state.input, this.props.activeDate.format('YYYY MM DD'));\r\n            this.setState({input: ''});\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            props: {\r\n                activeDate,\r\n                activeMode,\r\n                todo,\r\n                deleteTodo\r\n            },\r\n            handleOnChange,\r\n            handleAddnote,\r\n            state\r\n        } = this;\r\n\r\n        let currentDay = activeDate.format('YYYY MM DD');\r\n        const listOfTodos = todo.hasOwnProperty(currentDay)\r\n            ? todo[currentDay]\r\n            : [];\r\n\r\n        return activeMode === 'SINGLE_DAY' ?\r\n            <div className='singleDay'>\r\n                <div className='noteList'>\r\n                    {listOfTodos.map((note, ind) =>\r\n                        <TodoItem key={ind} {...{note, deleteTodo, ind, currentDay}} />\r\n                    )}\r\n                </div>\r\n                <div className='addNote'>\r\n                    <textarea onChange={handleOnChange} value={state.input} placeholder=\"Add a note...\"/>\r\n                    <button onClick={handleAddnote}>\r\n                        <FontAwesomeIcon icon={faPlus} size=\"2x\"/>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            : null;\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleDay);","import {ADD_TODO, DELETE_TODO} from '../../redux/types';\r\n\r\nexport const mapStateToProps = (store) => ({\r\n    activeDate: store.filter.activeDate,\r\n    activeMode: store.mode.activeMode,\r\n    todo: store.todo\r\n});\r\n\r\nexport const mapDispatchToProps = (dispatch) => ({\r\n    addTodo: (note, date) => dispatch({type: ADD_TODO, note, date}),\r\n    deleteTodo: (date, ind) => dispatch({type: DELETE_TODO, date, ind}),\r\n});","import React from 'react';\r\nimport CalendarGrid from \"../CalendarGrid\";\r\nimport MonthsGrid from \"../MonthsGrid\";\r\nimport SingleDay from '../SingleDay';\r\nimport './style.css';\r\n\r\nconst MainSection = () => {\r\n    return (\r\n        <div className='mainSection'>\r\n            <CalendarGrid/>\r\n            <MonthsGrid/>\r\n            <SingleDay/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainSection;","import React from 'react';\r\nimport Navigation from '../Navigation';\r\nimport './style.css';\r\nimport MainSection from '../MainSection'\r\n\r\nconst App = () => {\r\n        return (\r\n            <div className='app'>\r\n                <Navigation/>\r\n                <hr/>\r\n                <MainSection/>\r\n            </div>\r\n        );\r\n    };\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport rootReducer from './redux/reducers';\nimport App from './Containers/App';\n\n\nconst store = createStore(rootReducer, composeWithDevTools( applyMiddleware() ) );\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    , document.getElementById('root'));"],"sourceRoot":""}